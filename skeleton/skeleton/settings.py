"""
Django settings for skeleton project.

Generated by 'django-admin startproject' using Django 3.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from pathlib import Path

import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load the project version from VERSION.txt at start so it is always available
version_filename = BASE_DIR.parent / "VERSION.txt"
with open(version_filename, "r") as handle:
    APP_VERSION_NUMBER = handle.read().strip()

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# SECURITY WARNING: keep the secret key used in production secret!
if DEBUG:
    SECRET_KEY = os.environ.get("SKELETON_SECRET_KEY", "dontbefooledbydebugkey")
else:
    # hard fail if not debug and environment variable is not set
    SECRET_KEY = os.environ["SKELETON_SECRET_KEY"]

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # 3rd-party
    # internal
    "core",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "skeleton.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                # app processor to insert the fixed version data
                "core.context_processors.fixed_context",
            ]
        },
    }
]

WSGI_APPLICATION = "skeleton.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

# Pull database connection from environment variable when provided
sqlite_db_url = f"sqlite:///{os.path.join(BASE_DIR, 'db.sqlite3')}"
DATABASES = {
    "default": dj_database_url.parse(os.environ.get("SKELETON_DB_URL", sqlite_db_url))
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

# standardize date formatting
DATE_FORMAT = "Y-m-d"
USE_L10N = False

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = "/static/"

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "basic": {"format": "{asctime} {levelname} {message}", "style": "{"},
        "verbose": {
            "format": "{asctime} {levelname} {module} {process:d} {thread:d} {message}",
            "style": "{",
        },
    },
    "handlers": {"console": {"class": "logging.StreamHandler", "formatter": "basic"}},
    "loggers": {
        "django": {
            "handlers": ["console"],
            "level": os.getenv("SKELETON_LOG_LEVEL", "INFO"),
        },
        "core": {
            "handlers": ["console"],
            "level": os.getenv("SKELETON_LOG_LEVEL", "INFO"),
        },
    },
}
